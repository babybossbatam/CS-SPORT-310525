<div className="flex items-center justify-center px-3 py-3 flex-1 min-h-[60px] gap-2">
                              {/* Home Team Name - positioned further left */}
                              <div className="text-right text-sm text-gray-900 flex-1 pr-3 truncate">
                                {shortenTeamName(match.teams.home.name) || "Unknown Team"}
                              </div>

                              {/* Home team logo - closer to center */}
                              <div className="flex-shrink-0 flex items-center justify-center">
                                <img
                                  src={
                                    match.teams.home.id
                                      ? `/api/team-logo/square/${match.teams.home.id}?size=36`
                                      : "/assets/fallback-logo.svg"
                                  }
                                  alt={match.teams.home.name}
                                  title={match.teams.home.name}
                                  className={`w-9 h-9 ${
                                    isNationalTeam(
                                      match.teams.home,
                                      leagueData.league
                                    )
                                      ? "rounded-full object-cover"
                                      : "object-contain"
                                  }`}
                                  style={{
                                    width: "36px",
                                    height: "36px",
                                    minWidth: "36px",
                                    minHeight: "36px",
                                    filter: "brightness(115%) contrast(120%) saturate(110%) drop-shadow(0 3px 6px rgba(0,0,0,0.15)) drop-shadow(0 1px 3px rgba(0,0,0,0.08))",
                                  }}
                                  onError={(e) => {
                                    (e.target as HTMLImageElement).src = "/assets/fallback-logo.svg";
                                  }}
                                />
                              </div>

                              {/* Score/Time Center - Fixed width and centered */}
                              <div className="flex flex-col items-center justify-center px-3 w-[80px] flex-shrink-0 relative h-12">
                                {(() => {
                                  const status = match.fixture.status.short;
                                  const fixtureDate = parseISO(
                                    match.fixture.date,
                                  );

                                  // Live matches
                                  if (
                                    [
                                      "LIVE",
                                      "1H",
                                      "HT",
                                      "2H",
                                      "ET",
                                      "BT",
                                      "P",
                                      "INT",
                                    ].includes(status)
                                  ) {
                                    return (
                                      <div className="relative">
                                        <div className="text-lg font-bold flex items-center gap-2">
                                          <span className="text-black">
                                            {match.goals.home ?? 0}
                                          </span>
                                          <span className="text-gray-400">
                                            -
                                          </span>
                                          <span className="text-black">
                                            {match.goals.away ?? 0}
                                          </span>
                                        </div>
                                        <div className="absolute -top-3 left-1/2 transform -translate-x-1/2 text-xs font-semibold">
                                          <span className="text-red-600 animate-pulse bg-white px-1 rounded">
                                            {status === "HT"
                                              ? "HT"
                                              : `${match.fixture.status.elapsed || 0}'`}
                                          </span>
                                        </div>
                                      </div>
                                    );
                                  }

                                  // All finished match statuses
                                  if (
                                    [
                                      "FT",
                                      "AET",
                                      "PEN",
                                      "AWD",
                                      "WO",
                                      "ABD",
                                      "CANC",
                                      "SUSP",
                                    ].includes(status)
                                  ) {
                                    // Check if we have actual numerical scores
                                    const homeScore = match.goals.home;
                                    const awayScore = match.goals.away;
                                    const hasValidScores =
                                      homeScore !== null &&
                                      homeScore !== undefined &&
                                      awayScore !== null &&
                                      awayScore !== undefined &&
                                      !isNaN(Number(homeScore)) &&
                                      !isNaN(Number(awayScore));

                                    if (hasValidScores) {
                                      return (
                                        <div className="relative">
                                          <div className="text-lg font-bold flex items-center gap-2">
                                            <span className="text-black">
                                              {homeScore}
                                            </span>
                                            <span className="text-gray-400">
                                              -
                                            </span>
                                            <span className="text-black">
                                              {awayScore}
                                            </span>
                                          </div>
                                          <div className="absolute -top-3 left-1/2 transform -translate-x-1/2 text-xs font-semibold">
                                            <span className="text-gray-600 bg-white px-1 rounded">
                                              {status === "FT"
                                                ? "Ended"
                                                : status === "AET"
                                                  ? "AET"
                                                  : status === "PEN"
                                                    ? "PEN"
                                                    : status === "AWD"
                                                      ? "Awarded"
                                                      : status === "WO"
                                                        ? "Walkover"
                                                        : status === "ABD"
                                                          ? "Abandoned"
                                                          : status === "CANC"
                                                            ? "Cancelled"
                                                            : status === "SUSP"
                                                              ? "Suspended"
                                                              : status}
                                            </span>
                                          </div>
                                        </div>
                                      );
                                    } else {
                                      // Match is finished but no valid score data
                                      const statusText =
                                        status === "FT"
                                          ? "No Score"
                                          : status === "AET"
                                            ? "AET"
                                            : status === "PEN"
                                              ? "PEN"
                                              : status === "AWD"
                                                ? "Awarded"
                                                : status === "WO"
                                                  ? "Walkover"
                                                  : status === "ABD"
                                                    ? "Abandoned"
                                                    : status === "CANC"
                                                      ? "Cancelled"
                                                      : status === "SUSP"
                                                        ? "Suspended"
                                                        : "No Score";

                                      return (
                                        <div className="relative">
                                          <div className="text-sm font-medium text-gray-900">
                                            {format(fixtureDate, "HH:mm")}
                                          </div>
                                          <div className="absolute -top-3 left-1/2 transform -translate-x-1/2 text-xs font-semibold">
                                            <span className="text-gray-600 bg-white px-1 rounded">
                                              {statusText}
                                            </span>
                                          </div>
                                        </div>
                                      );
                                    }
                                  }

                                  // Postponed or delayed matches
                                  if (
                                    [
                                      "PST",
                                      "CANC",
                                      "ABD",
                                      "SUSP",
                                      "AWD",
                                      "WO",
                                    ].includes(status)
                                  ) {
                                    const statusText =
                                      status === "PST"
                                        ? "Postponed"
                                        : status === "CANC"
                                          ? "Cancelled"
                                          : status === "ABD"
                                            ? "Abandoned"
                                            : status === "SUSP"
                                              ? "Suspended"
                                              : status === "AWD"
                                                ? "Awarded"
                                                : status === "WO"
                                                  ? "Walkover"
                                                  : status;

                                    return (
                                      <div className="relative">
                                        <div className="text-sm font-medium text-gray-900">
                                          {format(fixtureDate, "HH:mm")}
                                        </div>
                                        <div className="absolute -top-3 left-1/2 transform -translate-x-1/2 text-xs font-semibold">
                                          <span className="text-red-600 bg-white px-1 rounded">
                                            {statusText}
                                          </span>
                                        </div>
                                      </div>
                                    );
                                  }

                                  // Upcoming matches (NS = Not Started, TBD = To Be Determined)
                                  return (
                                    <div className="relative flex items-center justify-center h-full">
                                      <div className="text-base font-medium text-black">
                                        {status === "TBD"
                                          ? "TBD"
                                          : format(fixtureDate, "HH:mm")}
                                      </div>
                                      {status === "TBD" && (
                                        <div className="absolute -top-3 left-1/2 transform -translate-x-1/2 text-xs">
                                          <span className="text-gray-500 bg-white px-1 rounded">
                                            Time TBD
                                          </span>
                                        </div>
                                      )}
                                    </div>
                                  );
                                })()}
                              </div>

                              {/* Away team logo - closer to center */}
                              <div className="flex-shrink-0 flex items-center justify-center">
                                <img
                                  src={
                                    match.teams.away.id
                                      ? `/api/team-logo/square/${match.teams.away.id}?size=36`
                                      : "/assets/fallback-logo.svg"
                                  }
                                  alt={match.teams.away.name}
                                  title={match.teams.away.name}
                                  className={`w-9 h-9 ${
                                    isNationalTeam(
                                      match.teams.away,
                                      leagueData.league
                                    )
                                      ? "rounded-full object-cover"
                                      : "object-contain"
                                  }`}
                                  style={{
                                    width: "36px",
                                    height: "36px",
                                    minWidth: "36px",
                                    minHeight: "36px",
                                    filter: "brightness(115%) contrast(120%) saturate(110%) drop-shadow(0 3px 6px rgba(0,0,0,0.15)) drop-shadow(0 1px 3px rgba(0,0,0,0.08))",
                                  }}
                                  onError={(e) => {
                                    (e.target as HTMLImageElement).src = "/assets/fallback-logo.svg";
                                  }}
                                />
                              </div>

                              {/* Away Team Name - positioned further right */}
                              <div className="text-left text-sm text-gray-900 flex-1 pl-3 truncate">